<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.orders">
	<!-- 주문테이블 insert : 쿠폰 사용했을 경우 -->
	<insert id="insertOrderWithCoupon" parameterType="ordersVo">
		<selectKey keyProperty="orderNo" resultType="int" order="BEFORE">
			select orders_seq.nextval from dual
		</selectKey>
		insert into orders(ORDER_NO, USER_NO, ORDER_PAYKIND, COUPON_NO, ORDER_DISCOUNT, ORDER_PAY)
		values(#{orderNo}, #{userNo}, #{orderPaykind}, #{couponNo}, #{orderDiscount}, #{orderPay})
	</insert>

	<!-- 주문테이블 insert : 쿠폰 사용 없을 경우-->
	<insert id="insertOrder" parameterType="ordersVo">
		<selectKey keyProperty="orderNo" resultType="int" order="BEFORE">
			select orders_seq.nextval from dual
		</selectKey>
		insert into orders(ORDER_NO, USER_NO, ORDER_PAYKIND, ORDER_PAY)
		values(#{orderNo}, #{userNo}, #{orderPaykind}, #{orderPay})
	</insert>

	<!-- 주문상세[1] 이력서 : 트랜잭션 처리를 위해 update -->
	<update id="insertOrderDetailResume" parameterType="ordersVo">
		insert into ORDERDETAILRESUME
		select #{orderNo} as ORDER_NO,
		    (select PAIDSERVICE_NO from paidservice
		        where PAIDSERVICE_NAME like '이력서') as PAIDSERVICE_NO, RESUME_NO
		from shoppingCart
		where user_no=#{userNo}
	</update>

	<!-- 주문상세[2] 기업후기-->
	<insert id="insertOrderDetailDelReview" parameterType="orderDetailDelRvVO">
		insert into ORDERDETAILDELRV(ORDER_NO, PAIDSERVICE_NO, CORPREVIEW_NO)
		values(#{orderNo},#{paidServiceNo}, #{corpreviewNo})
	</insert>

	<!-- 주문상세[3] 광고결제-->
	<insert id="insertOrderDetailAD" parameterType="orderDetailAdVO">
		insert into ORDERDETAILAD(ORDER_NO, PAIDSERVICE_NO, RECRUITANNOUNCE_NO)
		values(#{orderNo},#{paidServiceNo}, #{recruitannounceNo})
	</insert>
	
	<!-- 주문상세[4] 후기 열람권-->
	<insert id="insertOrderDetailSeeRV" parameterType="orderDetailSeeVO">
		insert into ORDERDETAILSEERV(ORDER_NO, PAIDSERVICE_NO, PAIDSERVICE_ENDDATE)
		values(#{orderNo},#{paidServiceNo}, #{paidserviceEnddate})
	</insert>

	<!-- 주문완료 후 상세내역 출력 [1] 이력서-->
	<select id="selectOrderdetailsResumeView" parameterType="int" resultType="map">
		select * from OrderdetailsResumeView
		where order_no=#{orderNo}
	</select>

	<!-- 주문완료 후 상세내역 출력 [2] 기업후기-->
	<select id="selectOrderdetailsDelRVView" parameterType="int" resultType="map">
		select * from OrderdetailsDelRVView
		where order_no=#{orderNo}
	</select>

	<!-- 주문완료 후 상세내역 출력 [3] 광고-->
	<select id="selectOrderdetailsADView" parameterType="int" resultType="map">
		select * from OrderdetailsADView
		where order_no=#{orderNo}
	</select>
	
	<!-- 주문완료 후 상세내역 출력 [4] 후기 열람권-->
	<select id="selectOrderdetailsSeeView" parameterType="int" resultType="map">
		select * from OrderdetailsSeeRVView
		where order_no=#{orderNo}
	</select>

	<select id="selectOrdersByOrderNo" parameterType="int" resultType="ordersVo">
		select * from orders where order_no=#{orderNo}
	</select>

	<!-- 구매 이력서 검색처리를 위한 WHERE문 -->
	<sql id="searchWhere">
		<where>
			<if test="userNo!=0">
				ORDER_NO in (select ORDER_NO from orders where user_no=#{userNo})
			</if>
			<if test="searchKeyword !=null and searchKeyword != ''">
				and (USER_NAME like '%' || #{searchKeyword} || '%'
				or RESUME_TITLE like '%' || #{searchKeyword} || '%'
				or USER_EXPERIENCE like '%' || #{searchKeyword} || '%'
				or WORKKIND_NAME like '%' || #{searchKeyword} || '%')
			</if>
		</where>
	</sql>

	<!-- 회원이 구입한 전체 이력서 정보 -->
	<select id="selectPurchasedResume" parameterType="HrmResumePageVO" resultType="map">
		select *
		from
		(
		    select A.*, rownum as RNUM
		    from
		    (
		        select * from OrderdetailsResumeView
		        <include refid="searchWhere"></include>
		        order by ORDER_NO desc
		    )A
		)
		<![CDATA[
		where RNUM > #{firstRecordIndex} and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
		]]>
	</select>

	<!-- 이력서 구매 개수 -->
	<select id="selectTotalResumeRecord" parameterType="HrmResumePageVO" resultType="int">
		select count(*) from OrderdetailsResumeView
		<include refid="searchWhere"></include>
	</select>

	<!-- 개인 마이페이지 결제내역 사용 -->
<!-- 	<select id="selectIndivPaymentByUserno" parameterType="int" resultType="ordersVo">
		select a.*, b.PAIDSERVICE_STARTDATE, b.PAIDSERVICE_ENDDATE, c.PAIDSERVICE_NAME
		from ORDERS a join ORDERDETAILSEERV b
		on a.order_no=b.order_no
		join PAIDSERVICE c
		on b.PAIDSERVICE_NO=c.PAIDSERVICE_NO
		where a.user_no=#{userNo}
		order by a.ORDER_NO desc
	</select> -->

	<select id="selectIndivPaymentByUserno" parameterType="indivpagingVo" resultType="ordersVo">
		select *
		from
		(
		    select A.*, rownum as RNUM
		    from
		    (
		        		select a.*, b.PAIDSERVICE_STARTDATE, b.PAIDSERVICE_ENDDATE, c.PAIDSERVICE_NAME
                        from ORDERS a join ORDERDETAILSEERV b
                        on a.order_no=b.order_no
                        join PAIDSERVICE c
                        on b.PAIDSERVICE_NO=c.PAIDSERVICE_NO
                        where a.user_no=#{userNo}
                        order by a.ORDER_NO desc
		    )A
		)
		<![CDATA[
		where RNUM > #{firstRecordIndex}
		and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
		]]>
	</select>

	<select id="ordersGetTotalRecord" parameterType="indivpagingVo" resultType="int">
		select count(*) from orders
		where user_no=#{userNo}
	</select>

	<!-- 사용자번호로 사용자가 주문한 후기열람권결제내역 불러오기 -->
	<select id="selectorderscall" parameterType="int" resultType="Date">
		select PAIDSERVICE_ENDDATE from ORDERDETAILSEERV where exists (select order_no from orders where user_no=#{userNo})
	</select>


	<select id="ordersGetTotalRecords" parameterType="CompanypagingVO" resultType="int">
		select count(*) from orders
		where user_no=#{userNo}
	</select>

	<select id="selectCompanyPaymentByUserno" parameterType="CompanypagingVO" resultType="OrdersCorpPayVO">
				select * from
		(
		    select A.*, rownum as RNUM
		    from
		    (
		        select a.ORDER_NO, a.ORDER_PAY , (select b.PAIDSERVICE_NAME from PAIDSERVICE b
				where b.PAIDSERVICE_NO in (select c.PAIDSERVICE_NO from ORDERDETAILAD c where c.ORDER_NO in a.ORDER_NO)
				or b.PAIDSERVICE_NO in (select d.PAIDSERVICE_NO from ORDERDETAILRESUME d where d.ORDER_NO in a.ORDER_NO)
				or b.PAIDSERVICE_NO in (select e.PAIDSERVICE_NO from ORDERDETAILDELRV e where e.ORDER_NO in a.ORDER_NO)) as pay_name , a.ORDER_PAYKIND, a.ORDER_DATE from ORDERS a
				where user_no=#{userNo}
				order by a.ORDER_DATE desc
		    )A
		)
		<![CDATA[
		where RNUM > #{firstRecordIndex}
		and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
		]]>
	</select>

	<select id="selectPurchasedResumeByUserNo" parameterType="int" resultType="map">
		select resume_no from OrderdetailsResumeView
		where ORDER_NO in (select ORDER_NO from orders where user_no=#{userNo})
		order by ORDER_NO desc
	</select>

	<select id="selectPurchasedResumeCount" parameterType="ShoppingCartVO" resultType="int">
		select count(*) from OrderdetailsResumeView
		where ORDER_NO in (select ORDER_NO from orders where user_no=#{userNo} and resume_no=#{resumeNo})
	</select>

	<select id="selectCompanyPaymentListByUserno" parameterType="int" resultType="ordersCorpPayVO">
		select * from
			(
			    select A.*, rownum as RNUM
			    from
			    (
			        select a.ORDER_NO, a.ORDER_PAY , (select b.PAIDSERVICE_NAME from PAIDSERVICE b
					where b.PAIDSERVICE_NO in (select c.PAIDSERVICE_NO from ORDERDETAILAD c where c.ORDER_NO in a.ORDER_NO)
					or b.PAIDSERVICE_NO in (select d.PAIDSERVICE_NO from ORDERDETAILRESUME d where d.ORDER_NO in a.ORDER_NO)
					or b.PAIDSERVICE_NO in (select e.PAIDSERVICE_NO from ORDERDETAILDELRV e where e.ORDER_NO in a.ORDER_NO)) as pay_name , a.ORDER_PAYKIND, a.ORDER_DATE from ORDERS a
					where user_no=#{userNo}
					order by a.ORDER_DATE desc
			    )A
			)
	</select>

	<select id="totalPay" resultType="int">
		select nvl2(sum(order_pay),sum(order_pay),0)
      	from orders
	</select>

</mapper>
