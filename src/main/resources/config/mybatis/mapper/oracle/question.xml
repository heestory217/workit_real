<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="config.mybatis.mapper.oracle.question">

	<!-- 회원 질문 목록 조회 -->
	<resultMap type="HashMap" id="selectQstnAbout">
		<result property="questionAbout" column="QUESTION_ABOUT" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>
	<select id="selectUserQstnAll" parameterType="int" resultType="HashMap"
		resultMap="selectQstnAbout">
		select * from userQstnView 
		where USER_NO=#{userNo}
		order by QUESTION_NO desc
	</select>

	<!-- 회원 직무 -->
	<select id="selectUserWorkkind" parameterType="int" resultType="workkindVo">
		select u.WORKKIND_NO, w.WORKKIND_NAME
		from users u join workkind w
		on u.WORKKIND_NO = w.WORKKIND_NO
		where u.user_no=#{userNo}
	</select>
	
	<!-- 질문 등록 -->
	<insert id="insertQstn" parameterType="questionVo">
		<selectKey keyProperty="questionNo" resultType="int" order="BEFORE">
			select QUESTION_SEQ.NEXTVAL from dual
		</selectKey>
		insert into question(QUESTION_NO,USER_NO,WORKKIND_NO,QUESTION_TITLE,QUESTION_IMMSAVE,QUESTION_ABOUT)
		values(#{questionNo},#{userNo},#{workkindNo},#{questionTitle},#{questionImmsave},#{questionAbout})
	</insert>	
	
	<!-- 질문 상세 조회 -->
	<select id="selectQstn" parameterType="int" resultType="questionVo">
		select * from QUESTION where QUESTION_NO=#{questionNo}
	</select>
	
	<!-- 질문 수정 -->
	<update id="updateQstn" parameterType="questionVo">
		update QUESTION
		set WORKKIND_NO=#{workkindNo}, QUESTION_TITLE=#{questionTitle},
		  	QUESTION_ABOUT=#{questionAbout}, QUESTION_DATE=SYSDATE, QUESTION_IMMSAVE=2
		where QUESTION_NO=#{questionNo} and USER_NO=#{userNo}
	</update>

	<!-- 질문 수정 - 임시저장 -->
	<update id="updateTempQstn" parameterType="questionVo">
		update QUESTION
		set WORKKIND_NO=#{workkindNo}, QUESTION_TITLE=#{questionTitle},
		  	QUESTION_ABOUT=#{questionAbout}, QUESTION_DATE=SYSDATE, QUESTION_IMMSAVE=1
		where QUESTION_NO=#{questionNo} and USER_NO=#{userNo}
	</update>
	
	<!-- 질문 조회 -->
	<select id="selectAllQstn" resultType="questionVo">
		select * from QUESTION 
		where QUESTION_IMMSAVE=2
		order by QUESTION_NO desc
	</select>
	
	
	<!-- 질문 목록 조회(페이징처리) -->
	<resultMap type="HashMap" id="QstnAbout">
		<result property="questionAbout" column="QUESTION_ABOUT" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>
	<select id="selectAllQuestion" parameterType="qstnPagingVo" resultType="HashMap"
		resultMap="QstnAbout">
		select *
			from
			(
			    select A.*, rownum as RNUM
			    from
			    (
			    	<if test="userNo!='' and userNo!=null">
				        select * from userQstnView 
						where USER_NO=#{userNo} and QUESTION_IMMSAVE=#{questionImmsave}
			    	</if>
			    	<if test="userNo=='' or userNo==null">
			    		select * from userQstnView 
			    		where QUESTION_IMMSAVE=2
			    	</if>
					order by QUESTION_NO desc
			    )A
			)
			<![CDATA[
			where RNUM > #{firstRecordIndex} 
			and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
			]]>
	</select>
	
	<select id="getCmntCnt" parameterType="int" resultType="map">
		SELECT COUNT(*) FROM COMMENTRESPOND
		WHERE QUESTION_NO=#{questionNo}
	</select>
	
	<!-- 질문 개수 -->
	<select id="getTotalRecord" parameterType="qstnPagingVo"
		resultType="int">
		<if test="userNo=='' or userNo==null">
			select count(*) from QUESTION
			where QUESTION_IMMSAVE=2
		</if>
		<if test="userNo!='' and userNo!=null">
			select count(*) from QUESTION
			where USER_NO=#{userNo} and QUESTION_IMMSAVE=#{questionImmsave}
		</if>
	</select>
	
	<!-- 질문 삭제 -->
	<delete id="deleteQstn" parameterType="int">
		DELETE FROM QUESTION WHERE QUESTION_NO=#{questionNo}
	</delete>
	
	<!-- 조회수 증가 처리 -->
	<update id="updateReadCnt" parameterType="int">
		update QUESTION
		set QUESTION_VIEW=QUESTION_VIEW+1
		where QUESTION_NO=#{questionNo}
	</update>
	
	<!-- 회원 직무 관련 인기 있는 질문(조회수 기준) -->
	<select id="selectPopularQstn" parameterType="int" resultType="map">
		select *
		from
		(
		select * from userQstnView 
		where workkind_no in (select workkind_no from users where user_no=#{userNo})
		and question_immsave=2
		order by question_view desc
		)
		<![CDATA[
		where rownum <=3
		]]>
	</select>

	<!-- 인기 있는 질문(조회수 기준) -->
	<select id="selectPopularAllQstn" resultType="map">
		select *
		from
		(
		select * from userQstnView 
		where question_immsave=2
		order by question_view desc
		)
		<![CDATA[
		where rownum <=3
		]]>
	</select>
	
	<!-- 답변하기 질문 조회(최신순) -->
	<resultMap type="HashMap" id="qstnAbout">
		<result property="questionAbout" column="QUESTION_ABOUT" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>
	<select id="selectQstnByWorkkind" parameterType="qstnPagingVo" resultType="HashMap"
		resultMap="qstnAbout">
		select *
			from
			(
			    select A.*, rownum as RNUM
			    from
			    (
				        select * from userQstnView 
						where QUESTION_IMMSAVE=2
						and workkind_no in (select workkind_no from users where user_no=#{userNo})
						order by QUESTION_DATE desc
			    )A
			)
			<![CDATA[
			where RNUM > #{firstRecordIndex} 
			and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
			]]>
	</select>
	

	<!-- 답변하기 질문 조회(추천순) -->
	<resultMap type="HashMap" id="qstnText">
		<result property="questionAbout" column="QUESTION_ABOUT" jdbcType="CLOB" javaType="java.lang.String" />
	</resultMap>
	<select id="selectQstnByRecmd" parameterType="qstnPagingVo" resultType="HashMap"
		resultMap="qstnText">
		select *
			from
			(
			    select A.*, rownum as RNUM
			    from
			    (
				        select * from userQstnView 
						where QUESTION_IMMSAVE=2
						and workkind_no in (select workkind_no from users where user_no=#{userNo})
						order by QUESTION_VIEW desc, question_date desc
			    )A
			)
			<![CDATA[
			where RNUM > #{firstRecordIndex} 
			and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
			]]>
	</select>
	
	<!-- 답변하기 질문 조회(답변적은 순) -->
	<select id="selectQstnByCmntCnt" parameterType="qstnPagingVo" resultType="HashMap"
		resultMap="qstnText">
		select *
			from
			(
			    select A.*, rownum as RNUM
			    from
			    (
						select q.*, 
						(select count(*) from commentrespond c 
						where c.QUESTION_NO=q.question_no) as commentCnt 
						from userQstnView q where workkind_no 
						in (select workkind_no from users where user_no=#{userNo})
						order by commentCnt asc, question_date desc
			    )A
			)
			<![CDATA[
			where RNUM > #{firstRecordIndex} 
			and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
			]]>
	</select>
	
		
	<!-- 답변하기 게시판 질문 개수 -->
	<select id="getTotalRecordByWorkkind" parameterType="qstnPagingVo"
		resultType="int">
			select count(*) from userQstnView 
			where QUESTION_IMMSAVE=2
			and workkind_no in (select workkind_no from users where user_no=#{userNo})
	</select>
	
	<!-- 북마크 등록 -->
	<insert id="insertBookMark" parameterType="bookmarkVo">
	<selectKey keyProperty="bookmarkNo" resultType="int" order="BEFORE">
		select bookmark_seq.nextval from dual
	</selectKey>
		insert into bookmark(bookmark_no, question_no, user_no)
		values(#{bookmarkNo},#{questionNo},#{userNo})
	</insert>
	
	<!-- 북마크 삭제 -->
	<delete id="delBookmark" parameterType="bookmarkVo">
		delete from bookmark where question_no=#{questionNo} and user_no=#{userNo}
	</delete>
	
	<!-- 북마크 중복체크 -->
	<select id="DupChkBookmark" parameterType="bookmarkVo" resultType="int">
		select count(*) from bookmark
		where user_no=#{userNo} and question_no=#{questionNo}
	</select>
	
	<!-- 회원 북마크 조회 -->
	<select id="selectBookMarkByUser" parameterType="qstnPagingVo" 
		resultType="HashMap" resultMap="qstnText">
		select *
			from
			(
			    select A.*, rownum as RNUM
			    from
			    (
					select q.* 
					from bookmark b join userQstnView q
					on b.question_no = q.question_no
					where b.user_no=#{userNo} and q.QUESTION_IMMSAVE=2
					order by q.QUESTION_DATE DESC
			    )A
			)
			<![CDATA[
			where RNUM > #{firstRecordIndex} 
			and RNUM <= #{firstRecordIndex} + #{recordCountPerPage}
			]]>
	</select>
	
	<!-- 회원 북마크 개수 -->
	<select id="getBookMarkCnt" resultType="int" parameterType="qstnPagingVo">
		select count(*) from bookmark where user_no=#{userNo}		
	</select>

	<!-- 답변 개수 증가 -->
	<update id="updateComntCnt" parameterType="int">
		update question 
		set comment_count=comment_count+1
		where question_no=#{questionNo}
	</update>

	<!-- 답변 개수 증가 -->
	<update id="delComntCnt" parameterType="int">
		update question 
		set comment_count=comment_count-1
		where question_no=#{questionNo}
	</update>
	
	<!-- 북마크한 글 조회 -->
	<select id="selectBookmark" parameterType="int" resultType="bookmarkVo">
		select * from bookmark
		where user_no=#{userNo}
	</select>
</mapper>









